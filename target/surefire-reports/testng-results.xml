<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="17" passed="15" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-07T20:53:52Z" name="Suite" finished-at="2023-12-07T20:56:15Z" duration-ms="143063">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-12-07T20:53:52Z" name="Android" finished-at="2023-12-07T20:56:15Z" duration-ms="143063">
      <class name="runner.AllFeaturesRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:52Z" name="setUpClass" finished-at="2023-12-07T15:53:53Z" duration-ms="1085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@8c3b9d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:53:54Z" duration-ms="1421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Weather By City"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Weather API Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:54Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:53:55Z" duration-ms="204" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Weather By City"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Weather API Testing"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at steps.CityWeatherAPISteps.theAPIShouldProvideMeTheCurrentTemperatureInDegreesCelcius(CityWeatherAPISteps.java:59)
	at âœ½.The API should provide me the current temperature in Degrees Celcius(file:///C:/Alfredo/PQA/Platorun/Platorun-Java-V1.0/src/test/resources/features/CityWeatherAPI.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:55Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:53:57Z" duration-ms="2170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Place By Country and Zip Code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Country Zip Code API Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:57Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:53:57Z" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Place By Country and Zip Code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Country Zip Code API Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:57Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:53:57Z" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Place By Country and Zip Code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Country Zip Code API Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:53:57Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:54:58Z" duration-ms="61185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Map Navigation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Android Google Maps Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:54:58Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:00Z" duration-ms="1623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["MySQL DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MySQL Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:00Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:01Z" duration-ms="1045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["MySQL DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MySQL Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:01Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:02Z" duration-ms="1039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["MySQL DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MySQL Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:02Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:03Z" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["MySQL DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MySQL Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:03Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:14Z" duration-ms="11058" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Chrome Online Shopping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Web UI Testing"]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<T[hank you for your order!]> but was:<T[HANK YOU FOR YOUR ORDER 2]>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<T[hank you for your order!]> but was:<T[HANK YOU FOR YOUR ORDER 2]>
	at junit.framework.Assert.assertEquals(Assert.java:85)
	at junit.framework.Assert.assertEquals(Assert.java:91)
	at pageObjects.OnlineShoppingAppPage.verifyConfirmationMessage(OnlineShoppingAppPage.java:42)
	at steps.OnlineShoppingSteps.aConfirmationMessageShouldBeDisplayedOnTheScreen(OnlineShoppingSteps.java:34)
	at âœ½.A confirmation message "THANK YOU FOR YOUR ORDER 2" should be displayed on the screen(file:///C:/Alfredo/PQA/Platorun/Platorun-Java-V1.0/src/test/resources/features/OnlineShopping.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:14Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:29Z" duration-ms="14366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Firefox Online Shopping"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Web UI Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:29Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:30Z" duration-ms="1328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["SQLServer DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SQLServer Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:30Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:31Z" duration-ms="1040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["SQLServer DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SQLServer Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:31Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:32Z" duration-ms="1034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["SQLServer DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SQLServer Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:32Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:55:33Z" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["SQLServer DB Testing"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SQLServer Database Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:55:33Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-07T15:56:10Z" duration-ms="37192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Exploratory Test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Android Universal App Testing"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.AllFeaturesRunner@1573f9fc]" started-at="2023-12-07T15:56:10Z" name="tearDownClass" finished-at="2023-12-07T15:56:15Z" duration-ms="4789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.AllFeaturesRunner -->
    </test> <!-- Android -->
  </suite> <!-- Suite -->
</testng-results>
